arg_name: option
name: readConcern
type: :php:`MongoDB\\Driver\\ReadConcern <class.mongodb-driver-readconcern>`
description: |
  The default read concern to use for {{resource}} operations. Defaults
  to the Client's specified read concern.
interface: phpmethod
operation: selectCollection
optional: true
position: 1
replacement:
  resource: "collection"
---
arg_name: option
description: |
  The default read preference to use for {{resource}} operations.
  Defaults to the {{parent}}'s read preference.
interface: phpmethod
name: readPreference
operation: selectCollection
optional: true
position: 2
type: :php:`MongoDB\\Driver\\ReadPreference <class.mongodb-driver-readpreference>`
replacement:
  resource: "collection"
  parent: "Client"
---
arg_name: option
description: |
  Default type map for cursors and BSON documents. Defaults to the
  {{parent}}'s type map.
interface: phpmethod
name: typeMap
operation: selectCollection
optional: true
position: 3
type: array
replacement:
  parent: "Client"
---
arg_name: option
name: writeConcern
type: :php:`MongoDB\\Driver\\WriteConcern <class.mongodb-driver-writeconcern>`
description: |
  The default write concern to use for {{resource}} operations. Defaults
  to the {{parent}}'s specified write concern.
interface: phpmethod
operation: selectCollection
optional: true
position: 4
replacement:
  resource: "collection"
  parent: "Client"
---
arg_name: option
name: maxTimeMS
description: |
   The cumulative time limit in milliseconds for processing operations on
   the cursor. MongoDB aborts the operation at the earliest following
   :term:`interrupt point`.
interface: phpmethod
operation: listDatabases
type: integer
optional: true
position: 5
---
arg_name: option
name: bypassDocumentValidation
type: boolean
description: |
  If ``true``, allows the write operation to circumvent document level
  validation. This only applies when using the :pipeline:`$out` stage.

  Document validation requires MongoDB v3.2 or later: if you are using
  an earlier version of MongoDB, this option will be ignored.
interface: phpmethod
operation: aggregate
optional: true
position: 6
---
arg_name: option
name: upsert
type: boolean
description: |
  When true, {{role}} creates a new document if no document
  matches the query. If a document matches the query, {{role}}
  performs an update. To avoid multiple upserts, ensure that the query
  fields are uniquely indexed.

  The default is ``false``.
optional: true
interface: phpmethod
operation: MongoDB\\Collection::findOneAndUpdate
position: 7
...